version: "3.8"

volumes: 
  mongo_data:
  redis_data:
  postgis_tsodd_data:
  pgadmin_data:

services:

  nginx:
    container_name: nginx
    build: ./nginx
    depends_on: 
      - tsodd-service
      - user-service
      - frontend
    ports: 
      - "8080:80"

  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes: 
      - /app/node_modules
      - ./frontend:/app
    expose: 
      - "3000"
    environment: 
      - CHOKIDAR_USEPOLLING=true

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      target: builder
    image: user-service
    expose:
      - "8080"
    environment:
      - ENV=dev
    env_file: 
      - .env
    volumes:
      - ./user-service:/go/src/app
    depends_on: 
      - user-service-mongo
    command: > 
      ./wait-for.sh ${REDIS_HOST}:${REDIS_PORT} --timeout=30
      -- ./wait-for.sh ${MONGO_HOST}:${MONGO_PORT} --timeout=30
      -- reflex -r "\.go$$" -s -- sh -c "go run ./"
  
  tsodd-service:
    container_name: tsodd-service
    build: 
      context: ./tsodd-service
      dockerfile: Dockerfile
    env_file:
      - .env
    expose: 
      - "8080"
    depends_on:
      - postgis-tsodd
    command: >
      ./wait-for.sh ${POSTGIS_TSODD_HOST}:${POSTGIS_TSODD_PORT} --timeout=180
      -- java -jar tsodd-service.jar

  user-service-reids:
    container_name: ${REDIS_HOST}
    image: "redis:alpine"
    expose: 
      - ${REDIS_PORT}
    ports:
    - ${REDIS_PORT}:${REDIS_PORT}
    volumes: 
      - "redis_data:/data"

  user-service-mongo:
    container_name: ${MONGO_HOST}
    image: mongo
    volumes: 
      - "mongo_data:/data/db"
    environment: 
      - MONGO_LOG_DIR=/dev/null
    expose: 
      - ${MONGO_PORT}
    ports:
    - ${MONGO_PORT}:${MONGO_PORT}
    command: mongod --quiet --port ${MONGO_PORT} --logpath=/dev/null

  postgis-tsodd:
    container_name: ${POSTGIS_TSODD_HOST}
    image: postgis/postgis:latest
    environment:
      POSTGRES_USER: ${POSTGIS_TSODD_USER}
      POSTGRES_PASSWORD: ${POSTGIS_TSODD_PASSWORD}
      POSTGRES_DB: ${POSTGIS_TSODD_DATABASE}
    ports:
      - ${POSTGIS_TSODD_PORT}:${POSTGIS_TSODD_PORT}
    volumes:
      - "postgis_tsodd_data:/var/lib/postgresql/data"

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:${REDIS_HOST}:${REDIS_PORT}
    ports:
      - "8082:8081"

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
    depends_on:
      - user-service-mongo
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      # PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 
    ports:
      - "16543:80"
    depends_on:
      - postgis-tsodd
    logging: 
      driver: "none"
